local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,15 -10 ),v7("\109\80","\202\67\126\115\100\167\164\62"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,1));return "";end end else local v102=v10(v8(v42,16));if v30 then local v111=0;local v112;while true do if (v111==1) then return v112;end if (v111==0) then v112=v13(v102,v30);v30=nil;v111=1;end end else return v102;end end end);local function v31(v43,v44,v45) if v45 then local v103=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v103-(v103%1) ;else local v104=2^(v44-(2 -1)) ;return (((v43%(v104 + v104))>=v104) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==2) then v60=v31(v57,40 -19 ,31);v61=((v31(v57,32)==1) and  -1) or (2 -1) ;v55=3;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (1==v55) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==0) then v64=nil;if  not v62 then local v119=0;while true do if (v119==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (2==v63) then v65={};for v113=620 -(555 + 64) , #v64 do v65[v113]=v10(v9(v11(v64,v113,v113)));end v63=3;end if (v63==3) then return v14(v65);end if (1==v63) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=1,v70 do local v80=v32();local v81;if (v80==(932 -(857 + 74))) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v71[v79]=v81;end v69[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,1,1)==(568 -(367 + 201))) then local v107=0;local v108;local v109;local v110;while true do if (v107==2) then if (v31(v109,1 + 0 ,1)==1) then v110[2]=v71[v110[2]];end if (v31(v109,2,2)==1) then v110[3]=v71[v110[3]];end v107=3;end if (v107==3) then if (v31(v109,3,3)==1) then v110[4]=v71[v110[4]];end v66[v83]=v110;break;end if (1==v107) then v110={v33(),v33(),nil,nil};if (v108==0) then local v129=0;while true do if (v129==0) then v110[3]=v33();v110[4]=v33();break;end end elseif (v108==1) then v110[3]=v34();elseif (v108==2) then v110[930 -(214 + 713) ]=v34() -(2^16) ;elseif (v108==3) then v110[3]=v34() -(2^16) ;v110[4]=v33();end v107=2;end if (v107==0) then v108=v31(v84,2,3);v109=v31(v84,4,6);v107=1;end end end end for v85=1,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -(1 + 0) ;local v96={};local v97={};for v105=877 -(282 + 595) ,v95 do if (v105>=v89) then v93[v105-v89 ]=v94[v105 + 1 ];else v97[v105]=v94[v105 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v106=0;while true do if (v106==0) then v99=v87[v91];v100=v99[1];v106=1;end if (v106==1) then if (v100<=43) then if (v100<=(1658 -(1523 + 114))) then if (v100<=10) then if (v100<=4) then if (v100<=1) then if (v100==0) then local v136=v99[2];local v137,v138=v90(v97[v136](v97[v136 + 1 ]));v92=(v138 + v136) -1 ;local v139=0;for v211=v136,v92 do v139=v139 + 1 + 0 ;v97[v211]=v137[v139];end else local v140=0;local v141;local v142;local v143;while true do if (v140==0) then v141=v99[2];v142={v97[v141](v97[v141 + 1 ])};v140=1;end if (v140==1) then v143=0;for v355=v141,v99[4] do local v356=0;while true do if (v356==0) then v143=v143 + 1 ;v97[v355]=v142[v143];break;end end end break;end end end elseif (v100<=2) then local v144=v99[2];do return v21(v97,v144,v92);end elseif (v100>(3 -0)) then local v227=v99[2];local v228,v229=v90(v97[v227](v21(v97,v227 + 1 ,v92)));v92=(v229 + v227) -1 ;local v230=0;for v332=v227,v92 do v230=v230 + 1 ;v97[v332]=v228[v230];end elseif  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=7) then if (v100<=5) then local v145=0;local v146;while true do if (0==v145) then v146=v99[2];v97[v146]=v97[v146](v21(v97,v146 + 1 ,v99[3]));break;end end elseif (v100>6) then local v231=0;local v232;local v233;local v234;while true do if (1==v231) then v234={};v233=v18({},{[v7("\224\22\137\88\95\218\49","\59\191\73\224\54")]=function(v400,v401) local v402=0;local v403;while true do if (v402==0) then v403=v234[v401];return v403[1][v403[2]];end end end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v404,v405,v406) local v407=v234[v405];v407[1][v407[2]]=v406;end});v231=2;end if (0==v231) then v232=v88[v99[3]];v233=nil;v231=1;end if (v231==2) then for v409=1066 -(68 + 997) ,v99[4] do local v410=0;local v411;while true do if (v410==1) then if (v411[1271 -(226 + 1044) ]==48) then v234[v409-1 ]={v97,v411[12 -9 ]};else v234[v409-1 ]={v74,v411[3]};end v96[ #v96 + 1 ]=v234;break;end if (0==v410) then v91=v91 + 1 ;v411=v87[v91];v410=1;end end end v97[v99[2]]=v40(v232,v233,v75);break;end end else v97[v99[2]]=v97[v99[3]] + v99[121 -(32 + 85) ] ;end elseif (v100<=8) then local v147=0;local v148;while true do if (0==v147) then v148=v99[2];do return v21(v97,v148,v92);end break;end end elseif (v100>9) then local v236=0;local v237;local v238;local v239;while true do if (v236==1) then v239=0;for v412=v237,v99[1 + 3 ] do v239=v239 + 1 ;v97[v412]=v238[v239];end break;end if (v236==0) then v237=v99[2 + 0 ];v238={v97[v237](v97[v237 + 1 ])};v236=1;end end else local v240=0;local v241;local v242;local v243;while true do if (v240==1) then v243=v97[v241] + v242 ;v97[v241]=v243;v240=2;end if (v240==0) then v241=v99[2];v242=v97[v241 + 2 ];v240=1;end if (v240==2) then if (v242>0) then if (v243<=v97[v241 + (958 -(892 + 65)) ]) then local v451=0;while true do if (v451==0) then v91=v99[7 -4 ];v97[v241 + 3 ]=v243;break;end end end elseif (v243>=v97[v241 + (1 -0) ]) then v91=v99[3];v97[v241 + 3 ]=v243;end break;end end end elseif (v100<=15) then if (v100<=12) then if (v100==11) then local v149=v99[2];do return v97[v149](v21(v97,v149 + 1 ,v99[3]));end else local v150=v99[2];local v151,v152=v90(v97[v150](v21(v97,v150 + 1 ,v92)));v92=(v152 + v150) -1 ;local v153=0;for v214=v150,v92 do local v215=0;while true do if (v215==0) then v153=v153 + 1 ;v97[v214]=v151[v153];break;end end end end elseif (v100<=13) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>14) then local v245=v99[3];local v246=v97[v245];for v338=v245 + 1 ,v99[4] do v246=v246   .. v97[v338] ;end v97[v99[2]]=v246;elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=18) then if (v100<=16) then local v154=0;local v155;local v156;local v157;local v158;while true do if (v154==1) then v92=(v157 + v155) -(351 -(87 + 263)) ;v158=180 -(67 + 113) ;v154=2;end if (v154==2) then for v361=v155,v92 do local v362=0;while true do if (v362==0) then v158=v158 + 1 ;v97[v361]=v156[v158];break;end end end break;end if (v154==0) then v155=v99[2];v156,v157=v90(v97[v155](v21(v97,v155 + 1 ,v99[4 -1 ])));v154=1;end end elseif (v100==(13 + 4)) then local v248=v99[4 -2 ];v97[v248]=v97[v248](v21(v97,v248 + 1 ,v99[3]));else v97[v99[2]][v99[3]]=v99[4];end elseif (v100<=19) then local v159=0;local v160;local v161;while true do if (v159==0) then v160=v99[2];v161={};v159=1;end if (v159==1) then for v363=1, #v96 do local v364=0;local v365;while true do if (v364==0) then v365=v96[v363];for v443=0, #v365 do local v444=0;local v445;local v446;local v447;while true do if (0==v444) then v445=v365[v443];v446=v445[1 + 0 ];v444=1;end if (v444==1) then v447=v445[2];if ((v446==v97) and (v447>=v160)) then local v468=0;while true do if (v468==0) then v161[v447]=v446[v447];v445[1]=v161;break;end end end break;end end end break;end end end break;end end elseif (v100==20) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v252=0;local v253;while true do if (v252==0) then v253=v99[2];v97[v253]=v97[v253]();break;end end end elseif (v100<=32) then if (v100<=26) then if (v100<=23) then if (v100>22) then v97[v99[2]]=v99[3] + v97[v99[15 -11 ]] ;else v97[v99[954 -(802 + 150) ]]=v97[v99[7 -4 ]][v99[4]];end elseif (v100<=24) then local v165=0;local v166;while true do if (v165==0) then v166=v99[2];v97[v166]=v97[v166](v21(v97,v166 + 1 ,v92));break;end end elseif (v100==25) then v97[v99[3 -1 ]]=v97[v99[3 + 0 ]]%v97[v99[4]] ;else local v255=0;local v256;local v257;local v258;local v259;while true do if (v255==2) then for v415=v256,v92 do local v416=0;while true do if (0==v416) then v259=v259 + 1 ;v97[v415]=v257[v259];break;end end end break;end if (0==v255) then v256=v99[2];v257,v258=v90(v97[v256](v97[v256 + 1 ]));v255=1;end if (1==v255) then v92=(v258 + v256) -1 ;v259=0;v255=2;end end end elseif (v100<=29) then if (v100<=(1024 -(915 + 82))) then v97[v99[5 -3 ]]=v97[v99[3]][v99[4]];elseif (v100==28) then local v260=0;local v261;while true do if (v260==0) then v261=v99[2];v97[v261]=v97[v261](v97[v261 + 1 ]);break;end end else local v262=v99[2];local v263,v264=v90(v97[v262](v21(v97,v262 + 1 ,v99[3])));v92=(v264 + v262) -1 ;local v265=0;for v343=v262,v92 do v265=v265 + 1 + 0 ;v97[v343]=v263[v265];end end elseif (v100<=30) then local v169=0;local v170;local v171;local v172;while true do if (1==v169) then v172={};v171=v18({},{[v7("\244\72\45\90\249\54\208","\168\171\23\68\52\157\83")]=function(v367,v368) local v369=v172[v368];return v369[1][v369[2]];end,[v7("\203\78\251\168\50\36\137\240\116\237","\231\148\17\149\205\69\77")]=function(v370,v371,v372) local v373=v172[v371];v373[1][v373[2]]=v372;end});v169=2;end if (v169==0) then v170=v88[v99[3]];v171=nil;v169=1;end if (v169==2) then for v375=1,v99[4] do local v376=0;local v377;while true do if (v376==0) then v91=v91 + 1 ;v377=v87[v91];v376=1;end if (v376==1) then if (v377[1]==48) then v172[v375-1 ]={v97,v377[3]};else v172[v375-1 ]={v74,v377[3]};end v96[ #v96 + 1 ]=v172;break;end end end v97[v99[2]]=v40(v170,v171,v75);break;end end elseif (v100==31) then v97[v99[2 -0 ]][v97[v99[3]]]=v99[1191 -(1069 + 118) ];else v97[v99[2]]=v97[v99[6 -3 ]]%v97[v99[8 -4 ]] ;end elseif (v100<=37) then if (v100<=34) then if (v100==33) then for v216=v99[2],v99[3] do v97[v216]=nil;end else v97[v99[2]]=v97[v99[3]] + v99[1 + 3 ] ;end elseif (v100<=35) then v97[v99[2]]= #v97[v99[3]];elseif (v100>(63 -27)) then local v269=0;local v270;local v271;while true do if (0==v269) then v270=v99[2];v271=v97[v270];v269=1;end if (1==v269) then for v417=v270 + 1 ,v92 do v15(v271,v97[v417]);end break;end end else local v272=v99[2];v97[v272](v21(v97,v272 + 1 ,v99[3]));end elseif (v100<=40) then if (v100<=38) then local v175=0;local v176;local v177;local v178;while true do if (v175==0) then v176=v99[2];v177=v97[v176];v175=1;end if (v175==1) then v178=v97[v176 + 2 ];if (v178>(0 + 0)) then if (v177>v97[v176 + (792 -(368 + 423)) ]) then v91=v99[3];else v97[v176 + 3 ]=v177;end elseif (v177<v97[v176 + 1 ]) then v91=v99[3];else v97[v176 + 3 ]=v177;end break;end end elseif (v100>39) then v97[v99[2]]=v99[3];else local v275=v99[3];local v276=v97[v275];for v351=v275 + 1 ,v99[4] do v276=v276   .. v97[v351] ;end v97[v99[2]]=v276;end elseif (v100<=(128 -87)) then for v218=v99[2],v99[3] do v97[v218]=nil;end elseif (v100==42) then v97[v99[2]][v99[3]]=v99[4];else do return v97[v99[2]]();end end elseif (v100<=65) then if (v100<=54) then if (v100<=48) then if (v100<=45) then if (v100>(62 -(10 + 8))) then v91=v99[3];elseif (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=46) then local v180=v99[2];v97[v180](v21(v97,v180 + 1 ,v99[3]));elseif (v100==47) then v97[v99[2]]={};else v97[v99[2]]=v97[v99[3]];end elseif (v100<=51) then if (v100<=49) then if v97[v99[7 -5 ]] then v91=v91 + (443 -(416 + 26)) ;else v91=v99[3];end elseif (v100==50) then local v285=0;local v286;while true do if (v285==0) then v286=v99[2];v97[v286]=v97[v286]();break;end end else v97[v99[6 -4 ]][v99[3]]=v97[v99[2 + 2 ]];end elseif (v100<=(91 -39)) then local v181=0;local v182;while true do if (0==v181) then v182=v99[2];do return v97[v182](v21(v97,v182 + (439 -(145 + 293)) ,v99[3]));end break;end end elseif (v100>(483 -(44 + 386))) then local v289=0;local v290;local v291;while true do if (0==v289) then v290=v99[2];v291={};v289=1;end if (1==v289) then for v418=1, #v96 do local v419=v96[v418];for v439=0, #v419 do local v440=v419[v439];local v441=v440[1];local v442=v440[2];if ((v441==v97) and (v442>=v290)) then v291[v442]=v441[v442];v440[1]=v291;end end end break;end end else v97[v99[2]][v97[v99[1489 -(998 + 488) ]]]=v97[v99[4]];end elseif (v100<=59) then if (v100<=(18 + 38)) then if (v100>55) then v97[v99[2]][v97[v99[3]]]=v99[4];else local v185=v99[2];local v186=v99[4];local v187=v185 + 2 ;local v188={v97[v185](v97[v185 + 1 ],v97[v187])};for v220=1,v186 do v97[v187 + v220 ]=v188[v220];end local v189=v188[1];if v189 then local v294=0;while true do if (0==v294) then v97[v187]=v189;v91=v99[3];break;end end else v91=v91 + 1 ;end end elseif (v100<=(47 + 10)) then v97[v99[774 -(201 + 571) ]]=v97[v99[3]]%v99[4] ;elseif (v100==58) then v97[v99[2]]=v99[3];else local v297=0;local v298;while true do if (v297==0) then v298=v99[2];v97[v298](v21(v97,v298 + 1 ,v92));break;end end end elseif (v100<=62) then if (v100<=60) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];elseif (v100>(1199 -(116 + 1022))) then local v299=v99[8 -6 ];v97[v299]=v97[v299](v21(v97,v299 + 1 ,v92));else local v301=v99[2];local v302=v97[v301 + 2 ];local v303=v97[v301] + v302 ;v97[v301]=v303;if (v302>0) then if (v303<=v97[v301 + 1 ]) then v91=v99[3];v97[v301 + 3 ]=v303;end elseif (v303>=v97[v301 + 1 + 0 ]) then v91=v99[3];v97[v301 + 3 ]=v303;end end elseif (v100<=63) then v97[v99[2]]=v74[v99[3]];elseif (v100==64) then do return;end else local v305=v99[2];local v306=v97[v305];local v307=v97[v305 + 2 ];if (v307>0) then if (v306>v97[v305 + 1 ]) then v91=v99[3];else v97[v305 + 3 ]=v306;end elseif (v306<v97[v305 + 1 ]) then v91=v99[3];else v97[v305 + (10 -7) ]=v306;end end elseif (v100<=76) then if (v100<=70) then if (v100<=67) then if (v100==66) then v91=v99[3];else local v196=v99[2];local v197=v99[4];local v198=v196 + 2 ;local v199={v97[v196](v97[v196 + 1 ],v97[v198])};for v223=3 -2 ,v197 do v97[v198 + v223 ]=v199[v223];end local v200=v199[1];if v200 then local v308=0;while true do if (v308==0) then v97[v198]=v200;v91=v99[3];break;end end else v91=v91 + 1 ;end end elseif (v100<=(927 -(814 + 45))) then local v201=v99[2];local v202=v97[v201];for v226=v201 + 1 ,v92 do v15(v202,v97[v226]);end elseif (v100>(169 -100)) then do return;end else v97[v99[2]]=v75[v99[3]];end elseif (v100<=73) then if (v100<=71) then v97[v99[2]]=v40(v88[v99[3]],nil,v75);elseif (v100>72) then v97[v99[2]]= #v97[v99[1 + 2 ]];else v97[v99[2]]=v97[v99[3]];end elseif (v100<=74) then if (v97[v99[2]]==v99[2 + 2 ]) then v91=v91 + 1 ;else v91=v99[888 -(261 + 624) ];end elseif (v100==75) then v97[v99[2]]=v99[3] + v97[v99[4]] ;elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=81) then if (v100<=(138 -60)) then if (v100==77) then v97[v99[1082 -(1020 + 60) ]]={};else v97[v99[2]]=v97[v99[3]]%v99[1427 -(630 + 793) ] ;end elseif (v100<=79) then local v206=0;local v207;while true do if (v206==0) then v207=v99[2];v97[v207]=v97[v207](v97[v207 + 1 ]);break;end end elseif (v100>80) then v97[v99[2]]=v74[v99[3]];else local v318=v99[2];local v319=v97[v99[3]];v97[v318 + 1 ]=v319;v97[v318]=v319[v99[4]];end elseif (v100<=84) then if (v100<=82) then v97[v99[2]]=v40(v88[v99[3]],nil,v75);elseif (v100>83) then do return v97[v99[6 -4 ]]();end else local v323=v99[2];v97[v323](v21(v97,v323 + 1 ,v92));end elseif (v100<=85) then v97[v99[2]][v99[3]]=v97[v99[18 -14 ]];elseif (v100==86) then v97[v99[2]]=v75[v99[3]];else local v326=v99[2];local v327=v97[v99[3]];v97[v326 + 1 + 0 ]=v327;v97[v326]=v327[v99[13 -9 ]];end v91=v91 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
